<!DOCTYPE html>
<html lang="en">

<head>
    <%- include('../partials/head') %>
</head>

<body>
<header>
    <%- include('../partials/nav') %>
</header>

<div class="container">
    Sign Up for a new account or <a href="/sign-in">click here to sign in with an existing account</a>
    <form id="login-form">
        <label>Email</label>
        <input id="email" type="text" name="email" />
        <label>Password</label>
        <input type="password" name="password" />
        <button>Sign Up</button>
    </form>
    <div id="login-error" style="display: none;">
    </div>
    <a href="/dashboard">Dashboard</a>
</div>
</body>

<script src="https://www.gstatic.com/firebasejs/9.6.4/firebase-app-compat.js"></script>
<script src="https://www.gstatic.com/firebasejs/9.6.4/firebase-auth-compat.js"></script>

<script>

  // import createUserWithEmailAndPassword from "firebase/auth";
  window.onload = () => {
    console.log('Running onload')
    const firebaseConfig = {
      // CS5356 TODO #2
      // Copy your Firebase config here too
      apiKey: "AIzaSyC8GgODYkcCzFvniHSUib8_GGfNYObdZqg",
      authDomain: "cs5356-milestone-1.firebaseapp.com",
      projectId: "cs5356-milestone-1",
      storageBucket: "cs5356-milestone-1.appspot.com",
      messagingSenderId: "173231515017",
      appId: "1:173231515017:web:884d88d2a5a755933cad58"
    };

    const app = firebase.initializeApp(firebaseConfig);

    app.auth().setPersistence(firebase.auth.Auth.Persistence.NONE);

    document
      .getElementById("login-form")
      .addEventListener("submit", (event) => {
        event.preventDefault();
        const email = event.target.email.value;
        const password = event.target.password.value;

        // CS5356 TODO #3
        // Create a new user using the Firebase SDK for Web
        // Get the users ID token
        // Start a new session with the users ID token
        // Redirect the user to the /dashboard
        app.auth().createUserWithEmailAndPassword(email, password)
          .then((user) => {
            // Signed in
            if (user != null) {
              user.user.getIdToken().then(idToken => {
                fetch('/sessionLogin', {
                  method: 'POST',
                  headers: {
                    'Content-Type': 'application/json'
                  },
                  body: JSON.stringify({ idToken }) // add the users ID token here
                }).then(() => {
                  window.location.href = '/dashboard'
                });
              })
            }
          }).catch((error) => {
          const errorCode = error.code;
          const errorMessage = error.message;
          // ..
        });

        return false;
      });

  };
</script>

</html>